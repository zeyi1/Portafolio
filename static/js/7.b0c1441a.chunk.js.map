{"version":3,"sources":["images/javascript.svg","images/jupyter.svg","images/python.svg","images/react-icon.svg","images/selenium.svg","images/sql.svg","images/postgresql.svg","images/pytorch.svg","images/spring.svg","images/IntelliJ.svg","images/er.png","images/er2.png","images/mist.png","images/mist2.png","images/front.png","images/dashboard.png","images/kanban.png","images/ticket.png","images/monet.png","images/photo.png","images/architecture.png","images/count.png","images/loss.png","images/result.png","images/result2.png","images/sharingan.png","images/illustrator.png","images/gsap.svg","images/pixi.png","images/glsl.svg","images/animals.png","images/dataset.png","images/arch.png","images/heatmap.png","images/Isla.jpg","components/ProjectInfo.js","data/projectData.js","components/Projects.js"],"names":["module","exports","useStyles","makeStyles","theme","container","justify","card","background","cardActions","display","icongrid","margin","icon","width","spacing","height","image","border","ProjectInfo","dataItem","classes","Card","className","CardActionArea","onClick","event","window","open","url","Box","style","overflowY","map","item","ImageListItem","key","altn","component","src","name","alt","loading","CardContent","Typography","gutterBottom","variant","fontFamily","textAlign","title","description","color","fontSize","Grid","grid","skills","sm","Avatar","projectData","er","er2","imgAlt","postgresql","sql","mist","mist2","front","dashboard","kanban","ticket","javascript","reacticon","python","spring","intellij","result2","monet","photo","architecture","count","loss","result","pytorch","jupyter","sharingan","illustrator","gsap","glsl","pixi","animals","dataset","arch","heatmap","isla","selenium","paddingTop","outergrid","justifyContent","Projects","length","id","data","md","lg"],"mappings":"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","file":"static/js/7.b0c1441a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/javascript.f70a79bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/jupyter.9aa5ff93.svg\";","module.exports = __webpack_public_path__ + \"static/media/python.940f596b.svg\";","module.exports = __webpack_public_path__ + \"static/media/react-icon.3070b8b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/selenium.40b7db34.svg\";","module.exports = __webpack_public_path__ + \"static/media/sql.e3049113.svg\";","module.exports = __webpack_public_path__ + \"static/media/postgresql.0320a105.svg\";","module.exports = __webpack_public_path__ + \"static/media/pytorch.e3fa8199.svg\";","module.exports = __webpack_public_path__ + \"static/media/spring.ede95926.svg\";","module.exports = __webpack_public_path__ + \"static/media/IntelliJ.2396978f.svg\";","module.exports = __webpack_public_path__ + \"static/media/er.725a4172.png\";","module.exports = __webpack_public_path__ + \"static/media/er2.7107d110.png\";","module.exports = __webpack_public_path__ + \"static/media/mist.f86fd38a.png\";","module.exports = __webpack_public_path__ + \"static/media/mist2.da02b807.png\";","module.exports = __webpack_public_path__ + \"static/media/front.7ecc9120.png\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.11feab93.png\";","module.exports = __webpack_public_path__ + \"static/media/kanban.bdf6bc55.png\";","module.exports = __webpack_public_path__ + \"static/media/ticket.9972615e.png\";","module.exports = __webpack_public_path__ + \"static/media/monet.8319bbc1.png\";","module.exports = __webpack_public_path__ + \"static/media/photo.33aaa964.png\";","module.exports = __webpack_public_path__ + \"static/media/architecture.b65aca49.png\";","module.exports = __webpack_public_path__ + \"static/media/count.2db6a446.png\";","module.exports = __webpack_public_path__ + \"static/media/loss.6f2d7657.png\";","module.exports = __webpack_public_path__ + \"static/media/result.895ee766.png\";","module.exports = __webpack_public_path__ + \"static/media/result2.293d6cc2.png\";","module.exports = __webpack_public_path__ + \"static/media/sharingan.9dd9add7.png\";","module.exports = __webpack_public_path__ + \"static/media/illustrator.44ca6901.png\";","module.exports = __webpack_public_path__ + \"static/media/gsap.6ec18a3f.svg\";","module.exports = __webpack_public_path__ + \"static/media/pixi.f2db6dba.png\";","module.exports = __webpack_public_path__ + \"static/media/glsl.574cda6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/animals.2f52dfa4.png\";","module.exports = __webpack_public_path__ + \"static/media/dataset.2e5385a4.png\";","module.exports = __webpack_public_path__ + \"static/media/arch.dbafcb9a.png\";","module.exports = __webpack_public_path__ + \"static/media/heatmap.6610e934.png\";","module.exports = __webpack_public_path__ + \"static/media/Isla.f8a06c91.jpg\";","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport { Box, Card, CardActionArea, CardContent, Typography, Grid, Avatar } from '@material-ui/core';\r\nimport ImageList from '@mui/material/ImageListItem';\r\nimport ImageListItem from '@mui/material/ImageListItem';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container:{\r\n        // maxWidth: '600px',\r\n        justify: 'center',\r\n        // border: '2px solid red',\r\n        // margin: 'auto'\r\n    },\r\n    card: {\r\n        // maxWidth: '100%',\r\n        // border: '2px solid red',\r\n        background: 'transparent'\r\n    },\r\n    \r\n    cardActions:{\r\n        display: 'flex',\r\n        // margin: '0 auto',\r\n        // justifyContent: \"space-between\"\r\n    },\r\n    icongrid:{\r\n        margin: '10px 1rem',\r\n        // [theme.breakpoints.down('sm')]:{\r\n        //     padding: '10px 10px'\r\n        // },\r\n        // margin: '0 auto'\r\n    },\r\n    icon:{\r\n        width: theme.spacing(5),\r\n        height: theme.spacing(5),\r\n\r\n    },\r\n\r\n    image:{\r\n        border: '1px solid grey'\r\n        \r\n    }\r\n}))\r\n\r\nconst ProjectInfo = ({dataItem}) => {\r\n    const classes = useStyles();\r\n\r\n    return(\r\n\r\n        <Card className={classes.card}>\r\n            {/* onClick={event => window.open(item.url, '_blank')} */}\r\n            <CardActionArea {...(\"url\" in dataItem && {onClick: event => window.open(dataItem.url)})}>\r\n                \r\n                {/* <CardMedia className={classes.image} title={dataItem.imgAlt}> */}\r\n                    {/* <Box\r\n                        component=\"img\"\r\n                        style={{position:'relative', width:'100%',height:'100%'}}\r\n                        src={dataItem.image}\r\n                        layout=\"fill\"\r\n                        objectFit=\"contain\"\r\n                    /> */}\r\n                    <Box style={{width:'100%', height:300, overflowY: 'scroll'}}>\r\n                    <ImageList>\r\n                        {dataItem.image.map((item) => (\r\n                            <ImageListItem key={item.altn} component='div' className={classes.image}>\r\n                                <img src={item.name} alt={item.altn} loading=\"lazy\"/>\r\n                            </ImageListItem>\r\n                        ))}\r\n                    </ImageList>\r\n                    </Box>\r\n                {/* </CardMedia> */}\r\n                    <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\" style={{fontFamily:\"'Special Elite', cursive\", textAlign:'center'}}>\r\n                        {dataItem.title}\r\n                    </Typography>\r\n                    {dataItem.description.map(item => (\r\n                        <Typography key={item} variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{fontFamily:\"'Harmattan', sans-serif\", fontSize:'1.5em'}}>\r\n                            {item}\r\n                         </Typography>\r\n\r\n                    ))}\r\n                    {\"url\" in dataItem && <Typography variant=\"body2\" color=\"textSecondary\" style={{fontFamily:\"'Harmattan', sans-serif\", fontSize:'1.5em'}}>{dataItem.url}</Typography>}\r\n                    </CardContent>\r\n            </CardActionArea>\r\n\r\n            {/* <CardActions className={classes.cardActions}> */}\r\n\r\n                <Grid container justify='center' className={classes.grid} style={{background:`linear-gradient(to bottom, rgba(255,241,235,0.5) 0%,rgba(233,222,250,0.5) 50%, rgba(105,145,199,0.5) 100%)`}}>      \r\n                    {dataItem.skills.map(item => (\r\n                        <Grid key={item[1]} item  className={classes.icongrid} sm={1} >\r\n                            <Avatar className={classes.icon} src={item[0]} alt={item[1]} variant='square'/>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            {/* </CardActions> */}\r\n\r\n        </Card>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default ProjectInfo","import postgresql from '../images/postgresql.svg';\r\nimport sql from '../images/sql.svg';\r\nimport er from '../images/er.png';\r\nimport er2 from '../images/er2.png';\r\nimport mist from '../images/mist.png';\r\nimport mist2 from '../images/mist2.png';\r\nimport front from '../images/front.png';\r\nimport dashboard from '../images/dashboard.png';\r\nimport kanban from '../images/kanban.png';\r\nimport ticket from '../images/ticket.png';\r\nimport reacticon from '../images/react-icon.svg';\r\nimport spring from '../images/spring.svg';\r\nimport intellij from '../images/IntelliJ.svg';\r\nimport python from '../images/python.svg';\r\nimport javascript from '../images/javascript.svg';\r\nimport pytorch from '../images/pytorch.svg';\r\nimport jupyter from '../images/jupyter.svg';\r\nimport monet from '../images/monet.png';\r\nimport photo from '../images/photo.png';\r\nimport architecture from '../images/architecture.png';\r\nimport count from '../images/count.png';\r\nimport loss from '../images/loss.png';\r\nimport result from '../images/result.png';\r\nimport result2 from '../images/result2.png';\r\nimport sharingan from '../images/sharingan.png';\r\nimport illustrator from '../images/illustrator.png';\r\nimport gsap from '../images/gsap.svg';\r\nimport pixi from '../images/pixi.png';\r\nimport glsl from '../images/glsl.svg';\r\nimport animals from '../images/animals.png';\r\nimport dataset from '../images/dataset.png';\r\nimport arch from '../images/arch.png';\r\nimport heatmap from '../images/heatmap.png';\r\nimport selenium from '../images/selenium.svg';\r\nimport isla from '../images/Isla.jpg';\r\n\r\nconst projectData = [\r\n    {\r\n        image: [{name: er, altn: 'er'}, {name: er2, altn: 'er2'}],\r\n        imgAlt: 'E-R Diagram',\r\n        title: 'Interchange.com',\r\n        description: ['Developed and refined an E-R schema diagram to model a peer-to-peer e-commerce website.',\r\n                      'Used PostgreSQL to design the corresponding relational schema and applied normalization to minimize data redundancy.',\r\n                      'Analyzed the queries plan and built indexes on various relations to speed up query search time.'],\r\n        skills: [[postgresql, 'PostgreSQL', 'square'], [sql, 'SQL', 'circle']]\r\n\r\n    },\r\n    {\r\n        image: [{name: mist, altn: 'M.I.S.T.'}, {name: mist2, altn: 'MIST2'}, {name: front, altn: 'Home Page'}, {name: dashboard, altn: 'Dashboard'}, {name: kanban, altn: 'Kanban Board'}, {name: ticket, altn: \"Ticket\"}],\r\n        imgAlt: 'Project Pamphlet',\r\n        title: 'M.I.S.T. Manage Improve Search Train',\r\n        description: [\"An aggregated platform with both a centralized management tool to track multiple projects' progress, and a powerful one-stop search engine to find any information within a company's repository.\",\r\n                      \"Used TF-IDF and latent semantic analysis to preprocess search queries in order to provide relevant search results.\",\r\n                      \"Built using microservices infrastructure for continuous integration.\" ],\r\n        skills: [[javascript, 'JavaScript', 'square'], [reacticon, 'React', 'circle'], [python, 'Python', 'circle'], [spring, 'Spring Boot', 'circle'], [sql, 'SQL', 'circle'], [intellij, \"IntelliJ IDEA\", 'square']]\r\n    },\r\n    {\r\n        image: [{name: result2, altn: 'Result2'}, {name: monet, altn: 'Monet'}, {name: photo, altn: 'Photo'}, {name: architecture, altn: 'Architecture'}, {name: count, altn: 'Count'}, {name: loss, altn: 'Loss'}, {name: result, altn: 'Result'}],\r\n        imgAlt: 'A.I. Project',\r\n        title: 'Photo-to-Monet',\r\n        description: ['A generative adversarial network that is able to convert photographic images into Monet-style images.',\r\n                      'Built using a CycleGAN architecture consisting of two generators and two discriminators.',\r\n                      'Applied data preprocessing, data augmentation, hyperparameters fine tuning, and performance validation'],\r\n        \r\n        skills: [[python, 'Python', 'circle'],  [pytorch, 'PyTorch', 'circle'], [jupyter, 'Jupyter', 'square']]\r\n    },\r\n    {\r\n        image: [{name: sharingan, altn: 'Sharingan'}],\r\n        imgAlt: 'Sharingan Animation',\r\n        title: 'Mangekyou Sharingan Animation',\r\n        description: ['Created an animation based off the anime Naruto. This project animates the evolution of Sharingan and displays its powers.',\r\n        'The artwork was sketched as an SVG using Adobe Illustrator.',\r\n        'Used GSAP animation library in React.js to create animated timelines.',\r\n        'Plan to use GLSL to create shaders that illustrate the Mangekyou Sharingan abilities, and use PIXI.js as a renderer.'],\r\n        url: \"https://codesandbox.io/s/confident-violet-lywmu\",\r\n        skills: [[javascript, 'JavaScript', 'square'], [reacticon, 'React', 'circle'], [illustrator, 'Illustrator', 'square'], [gsap, 'GSAP'], [glsl, 'GLSL', 'circle'], [pixi, 'Pixi', 'square']]\r\n    },\r\n    {\r\n        image: [{name: animals, altn: 'Animals'}, {name: dataset, altn: 'Dataset'}, {name: arch, altn: 'Arch'}, {name: heatmap, altn: 'Heatmap'}],\r\n        imgAlt: 'Convolutional Neural Network',\r\n        title: 'Multi-Class Animal Classification',\r\n        description: ['This project aims to create a deep learning model with the ability to classify ten different animal species.',\r\n        'The goal of the model is to extract key features and patterns from images that are unique to each animal, advancing from the detection of simple shapes such as lines, to complex specific objects like eyes.',\r\n        'The model was built by referencing the VGG16 architecture.'],\r\n        \r\n        skills: [[python, 'Python', 'circle'],  [pytorch, 'PyTorch', 'circle'], [jupyter, 'Jupyter', 'square']]\r\n    },\r\n    {\r\n        image: [{name: isla, altn: 'Isla'}],\r\n        imgAlt: 'Isla',\r\n        title: 'Personal Web Scraper',\r\n        description: [\"Ethically scraped products with discounted price at a reasonable rate and notify myself through Simple Mail Transfer Protocol.\", 'Used multithreading for concurrent data retrieval from various websites.', 'Used Gmail API as emailing service.'],\r\n        skills: [[python, 'Python', 'circle'], [selenium, 'Selenium', 'square'], [jupyter, 'Jupyter', 'square']]\r\n    }\r\n]\r\n\r\nexport default projectData","import React from 'react';\r\n\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nimport {Grid, Typography} from '@material-ui/core';\r\nimport ProjectInfo from './ProjectInfo';\r\nimport projectData from '../data/projectData';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container:{\r\n        background: 'linear-gradient(to bottom, rgba(255,241,235,0.5) 0%,rgba(233,222,250,0.5) 50%, rgba(105,145,199,0.5) 100%)'\r\n        \r\n    },\r\n    title: {\r\n        textAlign: 'center',\r\n        fontSize: '2em',\r\n        // paddingBottom: '1em',\r\n        paddingTop: '1em',\r\n        background: `linear-gradient(to top, #fff1eb, #e9defa, #6991c7)`\r\n\r\n    },\r\n    outergrid:{\r\n        width: '100%',\r\n        //background: 'linear-gradient(to top right, rgba(204,43,94,0.3) 0%, rgba(117,58,136,0.8) 100%)',\r\n        // background: `linear-gradient(to bottom, rgba(255,241,235,0.5) 0%,rgba(233,222,250,0.5) 50%, rgba(105,145,199,0.5) 100%)`,\r\n        // backgroundPosition: 'center',\r\n        // MozBackgroundSize: 'cover',\r\n        // WebkitBackgroundSize: 'cover',\r\n        // OBackgroundSize: 'cover',\r\n        // backgroundRepeat: 'no-repeat',\r\n        // backgroundImage: `linear-gradient(to bottom, #fff1eb, #e9defa, #6991c7), url(${tree})`,\r\n        justifyContent: 'center',\r\n        margin: 'auto',\r\n\r\n    }\r\n}))\r\n\r\n\r\nconst Projects = () => {\r\n    const classes = useStyles()\r\n\r\n    return(\r\n        projectData.length > 0 && (\r\n            <div className={classes.container} id='projects'>\r\n                <Typography className={classes.title} style={{fontFamily: \"'Handlee', cursive\"}}>\r\n                    Projects\r\n                </Typography>\r\n\r\n                <Grid container spacing={10} className={classes.outergrid} >\r\n                    \r\n                    {projectData.map(data => (\r\n                        <Grid item sm={12} md={6} lg={4} className={classes.container} key={data.title}>\r\n                            <ProjectInfo dataItem={data} />\r\n                        </Grid>\r\n                    ))}\r\n                    \r\n                </Grid>\r\n            </div>\r\n            \r\n        )\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default Projects;"],"sourceRoot":""}
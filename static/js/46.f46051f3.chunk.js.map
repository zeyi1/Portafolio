{"version":3,"file":"static/js/46.f46051f3.chunk.js","mappings":"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","sources":["data/formData.js","components/useForm.js","components/validateEmail.js","data/messageData.js","components/Message.js","components/Contact.js"],"sourcesContent":["import React from 'react';\r\nimport {Create, Email, Person} from '@material-ui/icons';\r\n\r\nconst formData = [\r\n    {\r\n        name: \"formName\",\r\n        text: 'Enter Your Name...',\r\n        icon: <Person />,\r\n        label: 'Name',\r\n        id: '1'\r\n    },\r\n    {\r\n        name: \"formEmail\",\r\n        text: 'Enter Your email...',\r\n        icon: <Email />,\r\n        label: 'Email',\r\n        id: '2'\r\n    },\r\n    {\r\n        name: \"formSubject\",\r\n        text: 'Specify The Subject...',\r\n        icon: <Create />,\r\n        label: 'Subject',\r\n        id: '3'\r\n    },\r\n];\r\n\r\nexport default formData;","import {useEffect, useState} from 'react';\r\n\r\n\r\nconst useForm = (callback, validate, updateSheet) => {\r\n    const [values, setValues] = useState({formName: \"\", formEmail: \"\", formSubject: \"\", formMessage: \"\"});\r\n    const [errors, setErrors] = useState({});\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    const handleChange = (event) => {\r\n        const {name, value} = event.target;\r\n\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n        console.log(event.target.name)\r\n        console.log(event.target.value)\r\n\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setErrors(validate(values));\r\n        setIsSubmitting(true);\r\n    };\r\n\r\n    \r\n    useEffect(() => {\r\n        const submitForm = () =>{\r\n            updateSheet();\r\n            callback();\r\n        }\r\n\r\n        if (Object.keys(errors).length === 0 && isSubmitting) {\r\n            submitForm()\r\n        }\r\n    }, [errors, isSubmitting])\r\n\r\n    return {\r\n        handleChange,\r\n        handleSubmit,\r\n        values,\r\n        errors\r\n    };\r\n};\r\n\r\nexport default useForm;","export default function validateEmail(values) {\r\n    let errors = {};\r\n    \r\n    if (!/\\S+@\\S+\\.\\S+/.test(values.formEmail)) {\r\n        errors.formEmail = \"Email address is invalid.\";\r\n    }\r\n\r\n    return errors;\r\n}","const string = Array.from(\"Thank You ! ! !\")\r\nconst string2 = Array.from(\"Your message was successfully submitted.\")\r\nconst string3 = Array.from(\"I'll contact you back once I see the message !\")\r\n\r\nconst textVariants = {\r\n    before: {},\r\n    after: { \r\n        transition: { \r\n            delayChildren: 3,\r\n            staggerChildren: 0.1\r\n        }\r\n    },\r\n}\r\n\r\nconst textVariants2 = {\r\n    before: {},\r\n    after: { \r\n        transition: { \r\n            delayChildren: 5,\r\n            staggerChildren: 0.1\r\n        }\r\n    },\r\n}\r\n\r\nconst textVariants3 = {\r\n    before: {},\r\n    after: { \r\n        transition: { \r\n            delayChildren: 9,\r\n            staggerChildren: 0.06\r\n        }\r\n    },\r\n}\r\n\r\nconst letterVariants = {\r\n    before: {\r\n      opacity: 0,\r\n      y: 20,\r\n    },\r\n    after: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        \r\n          type: \"spring\",\r\n        damping: 16,\r\n        stiffness: 200,\r\n    },\r\n    },\r\n}\r\n\r\nconst letterVariants2 = {\r\n    before: {\r\n      opacity: 0,\r\n      x: 100,\r\n      rotate:-270,\r\n    },\r\n    after: {\r\n      opacity: 1,\r\n      x: 0,\r\n      rotate:0,\r\n      transition: {\r\n        ease: \"easeInOut\",\r\n        type: \"spring\",\r\n        damping: 10,\r\n        stiffness: 80,\r\n    },\r\n    },\r\n}\r\n\r\nconst letterVariants3 ={\r\n    before: {\r\n        opacity: 0,\r\n        scale:5\r\n        \r\n    },\r\n    after: {\r\n        opacity: 1,\r\n        scale:1,\r\n        transition: {\r\n            ease: \"easeOut\",\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst messageData = [\r\n    {\r\n        id: 1,\r\n        size: 30,\r\n        fontfamily: \"'Handlee', cursive\",\r\n        weight: \"bold\",\r\n        style: \"normal\",\r\n        color: \"#000\",\r\n        margin: \"50px\",\r\n        text: string,\r\n        variant: textVariants,\r\n        childVariant: letterVariants,\r\n    },\r\n    {\r\n        id: 2,\r\n        size: 20,\r\n        fontfamily: \"'Handlee', cursive\",\r\n        weight: \"normal\",\r\n        style: \"normal\",\r\n        color: \"#000\",\r\n        margin: \"35px\",\r\n        text: string2,\r\n        variant: textVariants2,\r\n        childVariant: letterVariants2,\r\n    },\r\n    {\r\n        id: 3,\r\n        size: 17,\r\n        fontfamily: \"'Handlee', cursive\",\r\n        weight: \"normal\",\r\n        style: \"italic\",\r\n        color: \"#000\",\r\n        margin: \"20px\",\r\n        text: string3,\r\n        variant: textVariants3,\r\n        childVariant: letterVariants3,\r\n    },\r\n];\r\n\r\nexport default messageData;\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {motion} from 'framer-motion';\r\nimport {Frame} from 'framer';\r\nimport messageData from '../data/messageData';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        position: 'relative',\r\n        marginTop: '60px'\r\n    },\r\n    logo: {\r\n        display: 'block',\r\n        margin: 'auto',\r\n        width: 150,\r\n        height: 140\r\n    },\r\n    text: {\r\n        textAlign: 'center'\r\n    }\r\n})\r\n\r\nconst svgVariants = {\r\n    before: {},\r\n    after: {\r\n        transition: {\r\n            duration: 1,\r\n            when: \"beforeChildren\",\r\n            staggerChildren: 1}\r\n    }\r\n}\r\n\r\nconst pathVariants = {\r\n    before: {\r\n        opacity: 0,\r\n        pathLength: 0\r\n    },\r\n    after: {\r\n        opacity: 1,\r\n        pathLength: 1,\r\n        \r\n        transition: {\r\n            duration: 2,\r\n            ease: \"easeInOut\"\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst CustomFrame = (props) => (\r\n    <Frame\r\n        key={props.id}\r\n        position={\"relative\"}\r\n        center={ \"x\" }\r\n        height={ props.size }\r\n        width={ \"100%\" }\r\n        background={ \"\" }\r\n        style={{\r\n            fontFamily: props.fontfamily,\r\n            fontWeight: props.weight,\r\n            fontStyle: props.style,\r\n            letterSpacing: \"-0.0005em\",\r\n            fontSize: props.size,\r\n            color: props.color,\r\n            display: \"flex\", \r\n            justifyContent: \"center\", \r\n            marginTop: props.margin,\r\n        }}\r\n        variants={ props.variant }\r\n        initial={ \"before\" }\r\n        animate={ \"after\" }\r\n    >\r\n        {props.text.map((letter, index) => (\r\n            <Frame\r\n            key={ index }\r\n            width={ \"auto\" } \r\n            height={ props.size }\r\n            background={ \"\" }\r\n            style={{ position: \"relative\" }}\r\n            variants={ props.childVariant }\r\n            >\r\n            {letter === \" \" ? \"\\u00A0\" : letter}\r\n            </Frame>\r\n        ))}\r\n    </Frame>\r\n);\r\n\r\n\r\nconst Message = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div style={{overflow:'hidden'}} className={classes.container}>\r\n            <motion.svg viewBox=\"0 0 178 168\" className={classes.logo} {...props}\r\n                variants={svgVariants} initial=\"before\" animate=\"after\">\r\n                \r\n                <motion.path\r\n                    fill=\"none\"\r\n                    stroke=\"#39b54a\"\r\n                    d=\"M136.22 29.93s-45.82-43.16-98-5.53a58.2 58.2 0 00-13.41 13.47c-11.65 16.38-31.75 55.86 6.41 97.06 0 0 50 50 105 0 0 0 34-34.35 19-76.54\"\r\n                    strokeMiterlimit={10}\r\n                    strokeWidth={18}\r\n                    variants={pathVariants}\r\n                />\r\n                <motion.path\r\n                    fill=\"none\"\r\n                    stroke=\"#39b54a\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={20}\r\n                    d=\"M45.72 71l36 35 85-84\"\r\n                    variants={pathVariants}\r\n                />  \r\n            </motion.svg>\r\n\r\n            {messageData.map(data => (\r\n                <CustomFrame key={data.id} \r\n                    size={data.size}\r\n                    fontfamily={data.fontfamily}\r\n                    weight={data.weight}\r\n                    style={data.style}\r\n                    color={data.color}\r\n                    margin={data.margin}\r\n                    text={data.text}\r\n                    variant={data.variant}\r\n                    childVariant={data.childVariant}\r\n                    />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React, {useState, useEffect} from 'react';\r\n\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport {Box, Button, Grid, InputAdornment, TextField, Typography} from '@material-ui/core';\r\nimport {ChatBubble, Telegram} from '@material-ui/icons';\r\nimport {AnimatePresence, motion} from 'framer-motion';\r\nimport {useInView} from 'react-intersection-observer';\r\nimport formData from '../data/formData';\r\n\r\nimport useForm from './useForm';\r\nimport validateEmail from './validateEmail';\r\nimport Message from './Message';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root:{\r\n        position: 'relative',\r\n        paddingTop: '35px',\r\n    },\r\n    title:{\r\n        textAlign: 'center',\r\n        fontSize: '2em',\r\n        paddingBottom: '1em',\r\n    },\r\n    field: {\r\n        margin: '20px 0px',\r\n        fontFamily: 'Helvetica Neue',\r\n        fontSize: '50px',\r\n        width: '20rem'\r\n    },\r\n    button: {\r\n        margin: '1.5rem 0 3rem 0',\r\n        color : '#a9c9ff',\r\n        borderColor: '#4385f5',\r\n        '&:hover':{\r\n            backgroundColor: '#4385f5',\r\n            color: 'white',\r\n            opacity: '0.9',\r\n            boxShadow: '0 0 10px #4267B2'\r\n        }\r\n    },\r\n});\r\n\r\nconst InputField = withStyles({\r\n    root: {\r\n        '& label.Mui-focused': {\r\n            color: 'blue'\r\n        },\r\n        '& label':{\r\n            color: 'black',\r\n        },\r\n        '& .MuiInputBase-root': {\r\n            fontSize: '15px'\r\n        },\r\n\r\n        '& .MuiInputBase-input::-webkit-input-placeholder':{\r\n            color: 'red',\r\n            fontStyle: 'italic',\r\n        },\r\n        '& .MuiInputBase-input::-moz-placeholder':{\r\n            color: 'red',\r\n            fontStyle: 'italic'\r\n        },\r\n        '& .MuiInputBase-input:-ms-input-placeholder':{\r\n            color: 'red',\r\n            fontStyle: 'italic'\r\n        },\r\n        \r\n    },\r\n})(TextField);\r\n\r\nconst containerVariants = {\r\n    hidden: {\r\n        opacity: 0,\r\n        transition: {\r\n            delay: 1,\r\n            staggerChildren: 0.1,\r\n        }\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        transition: {\r\n            when: \"beforeChildren\",\r\n            staggerChildren: 0.2\r\n        }\r\n    }\r\n}\r\n\r\nconst childVariants = {\r\n    hidden: {\r\n        opacity: 0,\r\n        x: '100vw',\r\n        transition: {\r\n            ease: 'easeIn'\r\n        }\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        x: 0,\r\n        transition:{\r\n            type: 'spring',\r\n            mass: 0.45,\r\n            damping: 10,\r\n            stiffness: 80\r\n        },\r\n        \r\n    }\r\n}\r\n\r\n\r\nconst Contact = () => {\r\n\r\n    const classes = useStyles();\r\n    const [show, setShow] = useState(true);\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [variant, setVariant] = useState(\"hidden\");\r\n    const [ref, inView] = useInView({\r\n        triggerOnce: true,\r\n        threshold: 0.2\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (inView) {\r\n            setVariant(\"visible\")\r\n        }\r\n    }, [inView]);\r\n\r\n    const updateSheet = () => {\r\n        const url = 'https://script.google.com/macros/s/AKfycbyO5DB__7FssCnZI1z-kWb44Kam5KZ1sbEzRN2hc29MMWPkGrQ/exec';\r\n        const form = document.forms['contactForm'];\r\n        fetch(url, {method: 'POST', body: new FormData(form), mode:'no-cors'})\r\n            .then(response => console.log('Success!', response))\r\n            .catch(error => console.log('Error!', error.message))\r\n    }\r\n    \r\n    const {handleChange, handleSubmit, values, errors} = useForm(submit, validateEmail, updateSheet);\r\n    \r\n\r\n    function submit() {\r\n        setShow(false)\r\n        setTimeout(() => {\r\n            setShowMessage(true);\r\n        }, 1000)\r\n        \r\n    }\r\n    \r\n    return (\r\n\r\n        <Box variant='div' className={classes.root} id='contact'>\r\n            <Grid container justify='center' style={{height:615}}>\r\n\r\n                <form style={{overflow: \"hidden\"}} name=\"contactForm\" id=\"contactForm\" onSubmit={handleSubmit}>\r\n                    <Typography className={classes.title} style={{fontFamily: \"'Handlee', cursive\"}}>\r\n                        Hire or Contact Me...\r\n                    </Typography>\r\n                    <AnimatePresence exitBeforeEnter>      \r\n                        {show && <motion.div\r\n                            ref={ref}\r\n                            variants={containerVariants}\r\n                            initial='hidden'\r\n                            animate={variant}\r\n                            exit='hidden'>\r\n                    \r\n                        {formData.map(item => (\r\n                            <motion.div key={item.id} variants={childVariants}>\r\n                                <InputField className={classes.field} id={item.name} name={item.name} type=\"text\" value={values[item.name]} onChange={(event) => handleChange(event)}\r\n                                    InputProps={{\r\n                                        startAdornment: <InputAdornment position='start'>{item.icon}</InputAdornment>, \r\n                                        }}\r\n                                    fullWidth={true} \r\n                                    label={item.label} \r\n                                    margin='dense'\r\n                                    placeholder={item.text}\r\n                                    required={true}\r\n                                    variant='outlined'  \r\n                                    size='medium' \r\n                                    {...(errors[item.name] && {error:true, helperText:errors[item.name]})}\r\n                                    />\r\n                                <br />\r\n                            </motion.div>\r\n                        ))}\r\n\r\n                            <motion.div variants={childVariants}>\r\n                                <InputField multiline={true} className={classes.field} id='Message' name='formMessage' type=\"text\" value={values.formMessage} onChange={(event) => handleChange(event)}\r\n                                    InputProps={{\r\n                                        startAdornment: <InputAdornment position='start' ><ChatBubble /></InputAdornment>, \r\n                                        style: {color: 'black',\r\n                                                minHeight:'10rem'}}}\r\n                                    fullWidth={true} \r\n                                    label='Message'\r\n                                    margin='dense'\r\n                                    placeholder='Type Your Message...'\r\n                                    rowsMax='10'\r\n                                    variant='outlined'  \r\n                                    size='medium'\r\n                                />\r\n                            </motion.div>\r\n\r\n                            <motion.div variants={childVariants}>\r\n                                <Button className={classes.button} endIcon={<Telegram />} fullWidth={true} variant='outlined' type=\"submit\">\r\n                                        Send\r\n                                </Button>\r\n                            </motion.div>\r\n                        </motion.div>}\r\n\r\n                    </AnimatePresence>\r\n\r\n                    {showMessage && <Message />}\r\n                </form>\r\n            </Grid>\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nexport default Contact"],"names":["name","text","icon","_jsx","Person","label","id","Email","Create","callback","validate","updateSheet","_useState","useState","formName","formEmail","formSubject","formMessage","_useState2","_slicedToArray","values","setValues","_useState3","_useState4","errors","setErrors","_useState5","_useState6","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","handleChange","event","_event$target","target","value","_objectSpread","_defineProperty","console","log","handleSubmit","preventDefault","validateEmail","test","size","fontfamily","weight","style","color","margin","Array","from","variant","before","after","transition","delayChildren","staggerChildren","childVariant","opacity","y","type","damping","stiffness","x","rotate","ease","scale","useStyles","makeStyles","container","position","marginTop","logo","display","width","height","textAlign","svgVariants","duration","when","pathVariants","pathLength","CustomFrame","props","Frame","center","background","fontFamily","fontWeight","fontStyle","letterSpacing","fontSize","justifyContent","variants","initial","animate","children","map","letter","index","classes","_jsxs","overflow","className","motion","svg","viewBox","path","fill","stroke","d","strokeMiterlimit","strokeWidth","strokeLinecap","strokeLinejoin","messageData","data","root","paddingTop","title","paddingBottom","field","button","borderColor","backgroundColor","boxShadow","InputField","withStyles","TextField","containerVariants","hidden","delay","visible","childVariants","mass","show","setShow","showMessage","setShowMessage","setVariant","_useInView","useInView","triggerOnce","threshold","_useInView2","ref","inView","_useForm","useForm","setTimeout","form","document","forms","fetch","method","body","FormData","mode","then","response","catch","error","message","Box","Grid","justify","onSubmit","Typography","AnimatePresence","exitBeforeEnter","div","exit","formData","item","onChange","InputProps","startAdornment","InputAdornment","fullWidth","placeholder","required","helperText","multiline","ChatBubble","minHeight","rowsMax","Button","endIcon","Telegram","Message"],"sourceRoot":""}
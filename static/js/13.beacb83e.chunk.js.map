{"version":3,"sources":["components/NavigationBar.js"],"names":["navItems","id","title","linkName","icon","useStyles","makeStyles","theme","bar","backgroundColor","items","justifyContent","buttons","marginLeft","spacing","backgroundImage","color","boxShadow","useStylesMobile","menuSlider","background","witdh","avatar","display","margin","width","height","listItem","minWidth","listItem2","textAlign","paddingLeft","NavigationBar","useState","transition","headerStyle","setHeaderStyle","useScrollPosition","prevPos","isVisible","currPos","y","shouldBeStyle","visibility","transform","JSON","stringify","slider","right","state","setState","toggleSlider","open","classes","classesMobile","useTheme","isMobile","useMediaQuery","breakpoints","down","position","className","style","menuButton","aria-label","onClick","anchor","onClose","component","src","alt","map","item","key","activeClass","to","spy","smooth","hashSpy","duration","isDynamic","ignoreCancelEvents","button","fontFamily","disableTypography","primary","variant","navItem"],"mappings":"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","file":"static/js/13.beacb83e.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport {Link} from 'react-scroll';\r\nimport avatar from '../images/avatar.png';\r\nimport {AppBar, Button, Toolbar, ListItem, IconButton, ListItemText, Avatar, Divider, List, Typography, Box, ListItemIcon} from '@material-ui/core';\r\nimport {Home, AssignmentInd, Apps, ContactMail} from '@material-ui/icons';\r\nimport MobilRightMenuSlider from '@material-ui/core/Drawer';\r\nimport {useScrollPosition} from '@n8tb1t/use-scroll-position';\r\n\r\n\r\nconst navItems = [\r\n    {\r\n        id: '1',\r\n        title: 'About',\r\n        linkName: 'about',\r\n        icon: <Home />\r\n    },\r\n    {\r\n        id: '2',\r\n        title: 'Experience',\r\n        linkName: 'experience',\r\n        icon: <AssignmentInd />\r\n    },\r\n    {\r\n        id: '3',\r\n        title: 'Portafolio',\r\n        linkName: 'projects',\r\n        icon: <Apps />\r\n    },\r\n    {\r\n        id: '4',\r\n        title: 'Contact',\r\n        linkName: 'contact',\r\n        icon: <ContactMail />\r\n    }\r\n]\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    bar:{\r\n        backgroundColor: 'transparent',\r\n    },\r\n\r\n    items: {\r\n        justifyContent: 'center',\r\n        // [theme.breakpoints.down('xs')]:{\r\n        //     justifyContent: 'flex-end'\r\n        // }\r\n        \r\n    },\r\n\r\n    buttons: {\r\n        marginLeft: theme.spacing(3),\r\n        backgroundImage: 'radial-gradient( rgba(243,197,182,0.7), rgba(210,181,205,0.7),rgba(181,179,223,0.7), rgba(204,186,218,0.7))',\r\n        color: '#483b5a',\r\n        boxShadow: '0 0 3px 3px rgba(171,203,254,0.6)',\r\n        '&:hover': {\r\n            backgroundColor: '#abcbfe'\r\n        }\r\n\r\n    }\r\n\r\n  }));\r\n\r\nconst useStylesMobile = makeStyles(theme => ({\r\n    menuSlider: {\r\n\r\n        background: 'linear-gradient(to top left, rgba(0,90,167,0.6) 0%, rgba(255,253,228,0.7) 100%)',\r\n        // height: '70vh',\r\n        witdh: '100%'\r\n        \r\n    },\r\n    avatar: {\r\n        display: \"block\",\r\n        margin: \"0.5rem auto\",\r\n        width: theme.spacing(13),\r\n        height: theme.spacing(13),\r\n\r\n    },\r\n    listItem: {\r\n        minWidth:'40%',\r\n        color: '#6b0015',\r\n        justifyContent: 'flex-end',\r\n        // flex: 1,\r\n\r\n    },\r\n    listItem2:{\r\n        width: '50%',\r\n        textAlign: 'left',\r\n        paddingLeft: '20px'\r\n    }\r\n\r\n}))\r\n\r\nfunction NavigationBar() {\r\n\r\n    const [headerStyle, setHeaderStyle] = useState({\r\n        transition: 'all 500ms ease-in'\r\n      })\r\n      \r\n    useScrollPosition(\r\n    ({ prevPos, currPos }) => {\r\n        const isVisible = currPos.y > prevPos.y\r\n    \r\n        const shouldBeStyle = {\r\n        visibility: isVisible ? 'visible' : 'hidden',\r\n        transition: `all 500ms ${isVisible ? 'ease-in' : 'ease-out'}`,\r\n        transform: isVisible ? 'none' : 'translate(0, -100%)'\r\n        }\r\n    \r\n        if (JSON.stringify(shouldBeStyle) === JSON.stringify(headerStyle)) return\r\n    \r\n        setHeaderStyle(shouldBeStyle)\r\n    },\r\n    [headerStyle]\r\n    )\r\n\r\n\r\n    const [state, setState] = useState({\r\n        right: false\r\n    })\r\n\r\n    const toggleSlider = (slider, open) => () => {\r\n        setState({...state, [slider]: open})\r\n    }\r\n\r\n\r\n\r\n    const classes = useStyles();\r\n    const classesMobile = useStylesMobile();\r\n\r\n    const theme = useTheme();\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n\r\n\r\n    const sideList = slider => (\r\n\r\n        <Box className={classesMobile.menuSlider} component='div' onClick={toggleSlider(slider, false)}>\r\n            <Avatar className={classesMobile.avatar} src={avatar} alt=\"Sharingan One Tomoe\" />\r\n            <Divider />\r\n            <List>\r\n                {navItems.map(item => (\r\n\r\n                    <Link key = {item.id}\r\n                    activeClass=\"active\"\r\n                    to={item.linkName}\r\n                    spy={true}\r\n                    smooth={'easeOutQuart'}\r\n                    hashSpy={true}\r\n                    duration={2000}\r\n                    isDynamic={true}\r\n                    ignoreCancelEvents={false}\r\n                    onClick={toggleSlider(slider, false)}>\r\n                    \r\n                    <ListItem button style={{fontFamily: \"'Caveat', cursive\"}}>\r\n                        <ListItemIcon className={classesMobile.listItem}>{item.icon}</ListItemIcon>\r\n                        <ListItemText disableTypography className={classesMobile.listItem2} \r\n                            primary={<Typography variant='h6' style={{fontFamily: \"'Caveat', cursive\"}}>{item.title}</Typography>}/>\r\n                    </ListItem>\r\n\r\n                    </Link>\r\n                ))}\r\n            </List>\r\n        </Box>\r\n    )\r\n\r\n    return (\r\n        <>\r\n        <AppBar position=\"fixed\" className={classes.bar} style={{...headerStyle}}>\r\n        <Toolbar className={classes.items}>\r\n        \r\n            {isMobile ? (\r\n                <>\r\n                <IconButton \r\n                    className={classes.menuButton} \r\n                    aria-label=\"menu\"\r\n                    onClick={toggleSlider('right', true)}>\r\n\r\n                    <MenuIcon style={{color:'#2C68C6'}}/>\r\n                </IconButton>\r\n\r\n                <MobilRightMenuSlider anchor='bottom' open={state.right} onClose={toggleSlider('right', false)}>\r\n                    {sideList('right')}\r\n                </MobilRightMenuSlider>\r\n                \r\n                </>\r\n            ) :\r\n            (   \r\n                <>\r\n                {navItems.map(navItem => {\r\n                    const {id, title, linkName} = navItem;\r\n                    return (\r\n                        <Link key = {id}\r\n                            activeClass=\"active\"\r\n                            to={linkName}\r\n                            spy={true}\r\n                            smooth={'easeOutQuart'}\r\n                            hashSpy={true}\r\n                            duration={2000}\r\n                            isDynamic={true}\r\n                            ignoreCancelEvents={false}>\r\n                            <Button className={classes.buttons} style={{fontFamily: \"'Caveat', cursive\"}}>\r\n                                {title}\r\n                            </Button>\r\n                        </Link>\r\n                    )\r\n                })}                                \r\n                </>\r\n            )}\r\n        </Toolbar>\r\n    </AppBar>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default NavigationBar;"],"sourceRoot":""}
{"version":3,"sources":["components/Particle.js","components/Header.js","App.js","serviceWorker.js","index.js","images/avatar.png","images/Isla.png","images/shuriken.png"],"names":["useStyles","makeStyles","theme","tsparticles","top","minHeight","Particle","classes","className","options","fpsLimit","interactivity","detectsOn","events","onClick","enable","mode","onHover","parallax","smooth","resize","modes","bubble","distance","duration","opacity","size","push","quantity","repulse","particles","color","value","links","width","shadow","blue","triangles","collisions","move","direction","outMode","speed","trail","length","fillColor","number","density","area","limit","animation","minimumValue","shape","type","stroke","image","src","shuriken","height","random","rotate","sync","detectRetina","avatar","spacing","margin","title","fontSize","fontWeight","paddingBottom","breakpoints","down","test","backgroundColor","subtitle","textAlign","padding","typedContainer","position","left","transform","zIndex","backImage","backgroundImage","isla","backgroundPosition","MozBackgroundSize","WebkitBackgroundSize","OBackgroundSize","backgroundRepeat","button","boxShadow","background","Header","useState","setAnimation","Box","id","Grid","container","xs","justify","style","Avatar","alt","Typography","fontFamily","strings","typeSpeed","startDelay","showCursor","map","item","buttongrid","Button","NavigationBar","lazy","Timeline","Projects","Contact","Footer","App","fallback","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.9cef17c4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Particles from 'react-tsparticles';\r\nimport shuriken from '../images/shuriken.png'\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    tsparticles:{\r\n        top: 0,\r\n        minHeight: '100vh'\r\n    }\r\n}))\r\n\r\nconst Particle = () => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Particles\r\n            className={classes.tsparticles}\r\n            options={{\r\n            \r\n            fpsLimit: 240,\r\n            interactivity: {\r\n                detectsOn: \"canvas\",\r\n                events: {\r\n                onClick: {\r\n                    enable: true,\r\n                    mode: [\"bubble\", 'push'],\r\n\r\n                },\r\n                onHover: {\r\n                    enable: true,\r\n                    mode: \"repulse\",\r\n                    parallax: {\r\n                        enable: true,\r\n                        smooth: 1200\r\n                    }\r\n                },\r\n                \r\n                resize: true,\r\n                },\r\n                modes: {\r\n                    \r\n                    bubble: {\r\n                        distance: 800,\r\n                        duration: 4,\r\n                        opacity: 0.8,\r\n                        size: 30,\r\n                        push:{\r\n                            quantity: 5\r\n                        }\r\n                        \r\n                    },\r\n                    push: {\r\n                        quantity: 5\r\n                    },\r\n                    repulse: {\r\n                        distance: 200,\r\n                        duration: 1,\r\n                    },\r\n                },\r\n            },\r\n            particles: {\r\n                color: {\r\n                    value: [\"#0f0f18\", \"#2a3b90\", \"#35393d\", '#000000'],\r\n                },\r\n                links: {\r\n                    color: {\r\n                        value: [\"#420D09\", '#800000', '#5E1914', '#990000']\r\n                    },\r\n                    distance: 150,\r\n                    enable: true,\r\n                    opacity: 0.7,\r\n                    width: 2,\r\n                    shadow: {\r\n                        enable: true,\r\n                        color: '#000000',\r\n                        blue: 0.8\r\n                    },\r\n                    triangles: {\r\n                        enable: true,\r\n                        color: {\r\n                            value: ['8C59D6']\r\n                        },\r\n                            \r\n                            // color: '#32CD32', '2B91D4' 2B47D4  4617D8\r\n                        opacity: 0.2\r\n                    },\r\n                    // warp: true,\r\n                    \r\n                    \r\n                },\r\n                collisions: {\r\n                    enable: true,\r\n                    mode: 'bounce'\r\n                },\r\n                move: {\r\n                    direction: \"none\",\r\n                    enable: true,\r\n                    outMode: \"destroy\",\r\n                    speed: 3,\r\n                    trail: {\r\n                        enable:true,\r\n                        length: 60,\r\n                        fillColor: '#0E0E0E'\r\n                        // {\r\n                        //     value: ['#DFDFDF', '#0E0E0E']\r\n                        // }\r\n                    },\r\n                },\r\n                number: {\r\n                    density: {\r\n                        enable: true,\r\n                        area: 1500\r\n                    },\r\n                    limit: 50,\r\n                },\r\n                opacity: {\r\n                    animation: {\r\n                        enable: true,\r\n                        minimumValue: 0.2,\r\n                        speed: 1,\r\n                    },\r\n                    value: 1,\r\n                },\r\n\r\n                shape: {\r\n                    type: \"image\",\r\n                    stroke:{\r\n                        width: 0.5,\r\n                        color: '#ffffff'\r\n                    },\r\n                    image: {\r\n                        src: shuriken,\r\n                        width: 500,\r\n                        height: 500\r\n                    }\r\n                },\r\n                size: {\r\n                    random: true,\r\n                    value: 10,\r\n                },\r\n                rotate:{\r\n                    random: true,\r\n                    animation: {\r\n                        enable: true,\r\n                        speed: 20,\r\n                        sync: true\r\n                    },\r\n                    value:25,\r\n                    direction: 'random'\r\n                }\r\n            },\r\n            detectRetina: true,\r\n            }}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Particle;","import React, {useState} from 'react';\r\nimport '../App.css';\r\nimport {Typography, Avatar, Grid, Box, Button} from '@material-ui/core';\r\nimport avatar from '../images/avatar.png';\r\nimport Typed from 'react-typed';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport isla from '../images/Isla.png';\r\nimport Particle from './Particle';\r\n\r\n\r\nconst useStyles = makeStyles( theme => ({\r\n    avatar: {\r\n        width: theme.spacing(15),\r\n        height: theme.spacing(15),\r\n        margin: theme.spacing(1)\r\n    },\r\n    title: {\r\n        fontSize: '30px',\r\n        fontWeight: 'bold',\r\n        paddingBottom: '30px',\r\n        color: '#b5b4df',\r\n        [theme.breakpoints.down('xs')]:{\r\n            fontSize: '24px'\r\n        }\r\n    },\r\n    test:{\r\n        backgroundColor: 'rgba(0,0,0,0.7)' \r\n    },\r\n    subtitle: {\r\n        fontSize: '21px',\r\n        color: '#e6c0d4',\r\n        [theme.breakpoints.down('sm')]:{\r\n            textAlign: 'left',\r\n            padding: '0px 20px 15px 20px'\r\n        }\r\n    },\r\n    typedContainer: {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: \"translate(-50%, -50%)\",\r\n        width: '60vw',\r\n        textAlign: 'center',\r\n        zIndex: 1,\r\n        [theme.breakpoints.down('md')]:{\r\n            width: '80vw'\r\n        },\r\n        [theme.breakpoints.down('sm')]:{\r\n            width: '90vw'\r\n        }\r\n    },\r\n\r\n    backImage: {\r\n        backgroundImage: `linear-gradient(to top left, rgba(0,0,0,0.1) 0%,rgba(0,0,0,0.2) 100%), url(${isla})`,\r\n        width: '100%',\r\n        height: '100vh',\r\n        backgroundPosition: 'center',\r\n        MozBackgroundSize: 'cover',\r\n        WebkitBackgroundSize: 'cover',\r\n        OBackgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        \r\n    },\r\n    button:{\r\n        zIndex: 1,\r\n        top: '93vh',\r\n        // backgroundColor: '#abcbfe',\r\n        boxShadow: '0 0 5px 5px rgba(84,131,205, 0.7)',\r\n        background: '#2C68C6',\r\n        '&:hover':{\r\n            backgroundColor: 'rgba(41,104,238, 0.8)'\r\n        }\r\n    },\r\n    \r\n}))\r\n\r\n\r\nconst Header = () => {\r\n    \r\n    const [animation, setAnimation] = useState(false)\r\n    \r\n    const classes = useStyles()\r\n    \r\n    const title = \"Hi! I'm Zeyi, a Web / Software Developer.\"\r\n    const text = [[\"I have a passion for creating simplified and optimized software applications that solve real-world problems.\", 4000],\r\n                  ['I have experience in front-end and back-end design, machine learning and artificial intelligence, and building automated applications.', 9000],\r\n                  [\"I'm an introvert who loves learning new technologies, games and animes.\", 15000]]\r\n\r\n    return (\r\n        <>\r\n            <Box className={classes.backImage} id='about'>\r\n                \r\n                <Box className={classes.typedContainer}>\r\n\r\n                    <Grid container xs={12} justify='center' style={{paddingBottom: '40px'}}>\r\n                        <Avatar className={classes.avatar} src = {avatar} alt='Sharingan One Tomoe'/>\r\n                    </Grid>\r\n                    <Grid container xs={12}direction='column' className={classes.test}>\r\n                        <Typography className={classes.title} style={{fontFamily: \"'Kaushan Script', cursive\"}}>\r\n\r\n                            <Typed strings={[title]} typeSpeed={40} startDelay={1000} showCursor={false}/>\r\n                        </Typography>\r\n                        \r\n                        {text.map(item => (\r\n                            <Grid item>\r\n                                <Typography className={classes.subtitle} style={{fontFamily:\"'Harmattan', sans-serif\"}}>\r\n                                    <Typed strings={[item[0]]} typeSpeed={30} startDelay={item[1]} showCursor={false}/>\r\n                                </Typography>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid> \r\n                </Box>\r\n                <Grid container justify='center' className={classes.buttongrid}>\r\n                    <Button className={classes.button} style={{fontFamily: \"'Caveat', cursive\"}} onClick={() => setAnimation(!animation)}>Animate</Button>\r\n                    {animation ? <Particle /> : <></>}\r\n                </Grid>\r\n            </Box>\r\n\r\n            {/* <Box className={classes.backImage} id='about'>\r\n                <Box className={classes.typedContainer}>\r\n                    <Grid container justify='center'>\r\n                        <Avatar className={classes.avatar} src = {avatar} alt='Sharingan One Tomoe'/>\r\n                    </Grid>\r\n                    \r\n                    <Typography className={classes.title} variant='h4'>\r\n                        <Typed strings={['Zeyi Hong Chen']} typeSpeed={40} />\r\n                    </Typography>\r\n\r\n                    <br />\r\n\r\n                    <Typography className={classes.subtitle} variant='h5'>\r\n                        <Typed strings={['Web Development', 'Web Design', 'MERN Stack']}\r\n                        typeSpeed={40}\r\n                        backSpeed={40}\r\n                        loop/>\r\n                    </Typography>\r\n\r\n                    <Button className={classes.button} fullWidth={true} onClick={() => setAnimation(!animation)}>Toggle Animation</Button>\r\n                </Box>\r\n                \r\n                {animation ? <Particle /> : <></>}\r\n                \r\n            </Box> */}\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, {Suspense, lazy} from 'react';\r\nimport './App.css';\r\n// import NavigationBar from './components/NavigationBar';\r\n// import Footer from './components/Footer';\r\nimport Header from './components/Header';\r\n// import Timeline from './components/Timeline';\r\n// import Contact from './components/Contact';\r\n// import Projects from './components/Projects';\r\n\r\nconst NavigationBar = lazy(() => import('./components/NavigationBar'));\r\nconst Timeline = lazy(() => import('./components/Timeline'));\r\nconst Projects = lazy(() => import('./components/Projects'));\r\nconst Contact = lazy(() => import('./components/Contact'));\r\nconst Footer = lazy(() => import('./components/Footer'));\r\n\r\nfunction App() {\r\n  return (\r\n    \r\n      <div className='appRoot'>\r\n        {/* <CssBaseline/> */}\r\n        <Suspense fallback={<div />}>\r\n          <NavigationBar />\r\n        </Suspense>\r\n        \r\n        <Header />\r\n\r\n        <Suspense fallback={<div />}>\r\n          <Timeline /> \r\n        </Suspense>\r\n        \r\n        <Suspense fallback={<div />}>\r\n          <Projects />\r\n        </Suspense>\r\n        \r\n        <Suspense fallback={<div />}>\r\n          <Contact />\r\n        </Suspense>\r\n        \r\n        <Suspense fallback={<div />}>\r\n          <Footer />\r\n        </Suspense>\r\n        \r\n      </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { CssBaseline } from '@material-ui/core';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CssBaseline />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/avatar.53b45d96.png\";","module.exports = __webpack_public_path__ + \"static/media/Isla.5e0698de.png\";","module.exports = __webpack_public_path__ + \"static/media/shuriken.d0deb711.png\";"],"sourceRoot":""}
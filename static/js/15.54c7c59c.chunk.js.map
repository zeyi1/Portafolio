{"version":3,"sources":["data/navigationData.js","components/NavigationBar.js"],"names":["navigationData","id","title","linkName","icon","Home","AssignmentInd","Apps","ContactMail","Modal","lazy","useStyles","makeStyles","theme","bar","backgroundColor","items","justifyContent","buttons","marginLeft","spacing","backgroundImage","color","boxShadow","useStylesMobile","avatar","display","margin","width","height","listItem","minWidth","listItem2","textAlign","paddingLeft","outerList","visible","opacity","transition","delayChildren","staggerChildren","hidden","staggerDirection","listElement","y","stiffness","velocity","NavigationBar","useState","headerStyle","setHeaderStyle","useScrollPosition","prevPos","isVisible","currPos","shouldBeStyle","visibility","transform","JSON","stringify","modalRef","useRef","closeModal","current","classes","classesMobile","useTheme","isMobile","useMediaQuery","breakpoints","down","AppBar","position","className","style","Toolbar","IconButton","menuButton","aria-label","onClick","openModal","fallback","ref","Avatar","src","alt","Divider","div","variants","initial","animate","exit","map","item","key","activeClass","to","smooth","duration","isDynamic","ignoreCancelEvents","ListItem","button","fontFamily","ListItemIcon","ListItemText","disableTypography","primary","Typography","variant","navItem","Button"],"mappings":"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","file":"static/js/15.54c7c59c.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Home, AssignmentInd, Apps, ContactMail} from '@material-ui/icons';\r\n\r\nconst navigationData = [\r\n    {\r\n        id: '1',\r\n        title: 'About',\r\n        linkName: 'about',\r\n        icon: <Home />\r\n    },\r\n    {\r\n        id: '2',\r\n        title: 'Experience',\r\n        linkName: 'experience',\r\n        icon: <AssignmentInd />\r\n    },\r\n    {\r\n        id: '3',\r\n        title: 'Portafolio',\r\n        linkName: 'projects',\r\n        icon: <Apps />\r\n    },\r\n    {\r\n        id: '4',\r\n        title: 'Contact',\r\n        linkName: 'contact',\r\n        icon: <ContactMail />\r\n    }\r\n]\r\n\r\nexport default navigationData;","import React, {useState, useRef, Suspense, lazy} from 'react';\r\nimport {motion} from 'framer-motion';\r\nimport {Link} from 'react-scroll';\r\nimport {useScrollPosition} from '@n8tb1t/use-scroll-position';\r\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\r\nimport {AppBar, Button, Toolbar, ListItem, IconButton, ListItemText, Avatar, Divider, Typography, ListItemIcon} from '@material-ui/core';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport avatar from '../images/avatar.svg';\r\nimport navigationData from '../data/navigationData';\r\n\r\nconst Modal = lazy(() => import('./Modal'));\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    bar:{\r\n        backgroundColor: 'transparent',\r\n    },\r\n    items: {\r\n        justifyContent: 'center',\r\n        // [theme.breakpoints.down('xs')]:{\r\n        //     justifyContent: 'flex-end'\r\n        // }   \r\n    },\r\n    buttons: {\r\n        marginLeft: theme.spacing(3),\r\n        backgroundImage: 'radial-gradient( rgba(243,197,182,0.7), rgba(210,181,205,0.7),rgba(181,179,223,0.7), rgba(204,186,218,0.7))',\r\n        color: '#483b5a',\r\n        boxShadow: '0 0 3px 3px rgba(171,203,254,0.6)',\r\n        '&:hover': {\r\n            backgroundColor: '#abcbfe'\r\n        }\r\n    }\r\n  }));\r\n\r\nconst useStylesMobile = makeStyles(theme => ({\r\n    avatar: {\r\n        display: \"block\",\r\n        margin: \"0.5rem auto\",\r\n        width: theme.spacing(13),\r\n        height: theme.spacing(13),\r\n    },\r\n    listItem: {\r\n        minWidth:'40%',\r\n        color: '#6b0015',\r\n        justifyContent: 'flex-end',\r\n        // flex: 1,\r\n    },\r\n    listItem2:{\r\n        width: '50%',\r\n        textAlign: 'left',\r\n        paddingLeft: '20px'\r\n    }\r\n}))\r\n\r\nconst outerList = {\r\n    visible: {\r\n        opacity:1,\r\n        transition: {\r\n          delayChildren: 0.2,\r\n          staggerChildren: 0.07\r\n        }\r\n      },\r\n    hidden: {\r\n        opacity:0,\r\n    transition: {\r\n        staggerChildren: 0.05,\r\n        staggerDirection: -1\r\n    }\r\n    }\r\n}\r\n\r\nconst listElement = {\r\n    visible: {\r\n        y: 0,\r\n        opacity: 1,\r\n        transition: {\r\n          y: { stiffness: 1000, velocity: -100 }\r\n        }\r\n      },\r\n    hidden: {\r\n    y: 50,\r\n    opacity: 0,\r\n    transition: {\r\n        y: { stiffness: 1000 }\r\n    }\r\n    }\r\n}\r\n\r\n\r\nfunction NavigationBar() {\r\n\r\n    const [headerStyle, setHeaderStyle] = useState({\r\n        transition: 'all 500ms ease-in'\r\n      })\r\n      \r\n    useScrollPosition(\r\n    ({ prevPos, currPos }) => {\r\n        const isVisible = currPos.y > prevPos.y\r\n    \r\n        const shouldBeStyle = {\r\n        visibility: isVisible ? 'visible' : 'hidden',\r\n        transition: `all 500ms ${isVisible ? 'ease-in' : 'ease-out'}`,\r\n        transform: isVisible ? 'none' : 'translate(0, -100%)'\r\n        }\r\n    \r\n        if (JSON.stringify(shouldBeStyle) === JSON.stringify(headerStyle)) return\r\n    \r\n        setHeaderStyle(shouldBeStyle)\r\n    },\r\n    [headerStyle]\r\n    )\r\n\r\n    const modalRef = useRef(null);\r\n\r\n    const openModal = () => {\r\n        modalRef.current.openModal()\r\n    }\r\n\r\n    const closeModal = () => {\r\n        modalRef.current.closeModal()\r\n    }\r\n\r\n    const classes = useStyles();\r\n    const classesMobile = useStylesMobile();\r\n    const theme = useTheme();\r\n    const isMobile = useMediaQuery(theme.breakpoints.down('xs'));\r\n    \r\n\r\n    return (\r\n        <>\r\n        <AppBar position=\"fixed\" className={classes.bar} style={{...headerStyle}}>\r\n        <Toolbar className={classes.items}>\r\n        \r\n            {isMobile ? (\r\n                <>\r\n                <IconButton \r\n                    className={classes.menuButton} \r\n                    aria-label=\"menu\"\r\n                    onClick={openModal}>\r\n\r\n                    <MenuIcon style={{color:'#2C68C6'}}/>\r\n                </IconButton>\r\n\r\n                <Suspense fallback={<div />}>\r\n                    <Modal ref={modalRef}>\r\n                        <Avatar className={classesMobile.avatar} src={avatar} alt=\"Sharingan One Tomoe\" />\r\n                        <Divider />\r\n                        <motion.div variants={outerList}\r\n                            initial=\"hidden\"\r\n                            animate=\"visible\"\r\n                            exit=\"hidden\">\r\n                            {navigationData.map(item => (\r\n                                <motion.div variants={listElement} key={item.id}>\r\n                                    <Link \r\n                                    activeClass=\"active\"\r\n                                    to={item.linkName}\r\n                                    smooth={'easeOutQuart'}\r\n                                    duration={2000}\r\n                                    isDynamic={true}\r\n                                    ignoreCancelEvents={false}\r\n                                    onClick={closeModal}>\r\n\r\n                                        <ListItem button style={{fontFamily: \"'Caveat', cursive\"}}>\r\n                                            <ListItemIcon className={classesMobile.listItem}>{item.icon}</ListItemIcon>\r\n                                            <ListItemText disableTypography className={classesMobile.listItem2} \r\n                                                primary={<Typography variant='h6' style={{fontFamily: \"'Caveat', cursive\"}}>{item.title}</Typography>}/>\r\n                                        </ListItem>\r\n                                    </Link>\r\n                                </motion.div>\r\n                            ))}\r\n                        </motion.div>\r\n                    </Modal>\r\n                </Suspense>\r\n                </>\r\n            ) : (   \r\n                <>\r\n                {navigationData.map(navItem => {\r\n                    const {id, title, linkName} = navItem;\r\n                    return (\r\n                        <Link key = {id}\r\n                            activeClass=\"active\"\r\n                            to={linkName}\r\n                            smooth={'easeOutQuart'}\r\n                            duration={2000}\r\n                            isDynamic={true}\r\n                            ignoreCancelEvents={false}>\r\n                            <Button className={classes.buttons} style={{fontFamily: \"'Caveat', cursive\"}}>\r\n                                {title}\r\n                            </Button>\r\n                        </Link>\r\n                    )\r\n                })}                                \r\n                </>\r\n                )}\r\n        </Toolbar>\r\n    </AppBar>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default NavigationBar;"],"sourceRoot":""}
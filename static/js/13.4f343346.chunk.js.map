{"version":3,"sources":["data/formData.js","components/useForm.js","components/validateEmail.js","data/messageData.js","components/Message.js","components/Contact.js"],"names":["formData","name","text","icon","Person","label","id","Email","Create","useForm","callback","validate","updateSheet","useState","formName","formEmail","formSubject","formMessage","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","handleChange","event","target","value","console","log","handleSubmit","preventDefault","validateEmail","test","messageData","size","fontfamily","weight","style","color","margin","Array","from","variant","before","after","transition","delayChildren","staggerChildren","childVariant","opacity","y","type","damping","stiffness","x","rotate","ease","scale","useStyles","makeStyles","container","position","marginTop","logo","display","width","height","textAlign","svgVariants","duration","when","pathVariants","pathLength","CustomFrame","props","key","center","background","fontFamily","fontWeight","fontStyle","letterSpacing","fontSize","justifyContent","variants","initial","animate","map","letter","index","Message","classes","overflow","className","svg","viewBox","path","fill","stroke","d","strokeMiterlimit","strokeWidth","strokeLinecap","strokeLinejoin","data","root","paddingTop","title","paddingBottom","field","button","borderColor","backgroundColor","boxShadow","InputField","withStyles","TextField","containerVariants","hidden","delay","visible","childVariants","mass","Contact","show","setShow","showMessage","setShowMessage","setVariant","useInView","triggerOnce","threshold","ref","inView","setTimeout","form","document","forms","fetch","method","body","FormData","mode","then","response","catch","error","message","Box","Grid","justify","onSubmit","Typography","exitBeforeEnter","div","exit","item","onChange","InputProps","startAdornment","InputAdornment","fullWidth","placeholder","required","helperText","multiline","ChatBubble","minHeight","rowsMax","Button","endIcon","Telegram"],"mappings":"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","file":"static/js/13.4f343346.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Create, Email, Person} from '@material-ui/icons';\r\n\r\nconst formData = [\r\n    {\r\n        name: \"formName\",\r\n        text: 'Enter Your Name...',\r\n        icon: <Person />,\r\n        label: 'Name',\r\n        id: '1'\r\n    },\r\n    {\r\n        name: \"formEmail\",\r\n        text: 'Enter Your email...',\r\n        icon: <Email />,\r\n        label: 'Email',\r\n        id: '2'\r\n    },\r\n    {\r\n        name: \"formSubject\",\r\n        text: 'Specify The Subject...',\r\n        icon: <Create />,\r\n        label: 'Subject',\r\n        id: '3'\r\n    },\r\n];\r\n\r\nexport default formData;","import {useEffect, useState} from 'react';\r\n\r\n\r\nconst useForm = (callback, validate, updateSheet) => {\r\n    const [values, setValues] = useState({formName: \"\", formEmail: \"\", formSubject: \"\", formMessage: \"\"});\r\n    const [errors, setErrors] = useState({});\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n\r\n    const handleChange = (event) => {\r\n        const {name, value} = event.target;\r\n\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n        console.log(event.target.name)\r\n        console.log(event.target.value)\r\n\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setErrors(validate(values));\r\n        setIsSubmitting(true);\r\n        // console.log(setErrors(validate(values)))\r\n        // console.log(isSubmitting)\r\n        // console.log('a')\r\n        // console.log(errors)\r\n        // console.log(Object.keys(errors).length)\r\n        // callback();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(errors).length === 0 && isSubmitting) {\r\n            updateSheet();\r\n            callback();\r\n        }\r\n    }, [errors, isSubmitting])\r\n\r\n    return {\r\n        handleChange,\r\n        handleSubmit,\r\n        values,\r\n        errors\r\n    };\r\n};\r\n\r\nexport default useForm;","export default function validateEmail(values) {\r\n    let errors = {};\r\n    \r\n    if (!/\\S+@\\S+\\.\\S+/.test(values.formEmail)) {\r\n        errors.formEmail = \"Email address is invalid.\";\r\n    }\r\n    // if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    //     errors.email = \"Email address is invalid.\";\r\n    // }\r\n\r\n    return errors;\r\n}","const string = Array.from(\"Thank You ! ! !\")\r\nconst string2 = Array.from(\"Your message was successfully submitted.\")\r\nconst string3 = Array.from(\"I'll contact you back once I see the message !\")\r\n\r\nconst textVariants = {\r\n    before: {},\r\n    after: { \r\n        transition: { \r\n            delayChildren: 3,\r\n            staggerChildren: 0.1\r\n        }\r\n    },\r\n}\r\n\r\nconst textVariants2 = {\r\n    before: {},\r\n    after: { \r\n        transition: { \r\n            delayChildren: 5,\r\n            staggerChildren: 0.1\r\n        }\r\n    },\r\n}\r\n\r\nconst textVariants3 = {\r\n    before: {},\r\n    after: { \r\n        transition: { \r\n            delayChildren: 9,\r\n            staggerChildren: 0.06\r\n        }\r\n    },\r\n}\r\n\r\nconst letterVariants = {\r\n    before: {\r\n      opacity: 0,\r\n      y: 20,\r\n    },\r\n    after: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        \r\n          type: \"spring\",\r\n        damping: 16,\r\n        stiffness: 200,\r\n    },\r\n    },\r\n}\r\n\r\nconst letterVariants2 = {\r\n    before: {\r\n      opacity: 0,\r\n      x: 100,\r\n      rotate:-270,\r\n    },\r\n    after: {\r\n      opacity: 1,\r\n      x: 0,\r\n      rotate:0,\r\n      transition: {\r\n        ease: \"easeInOut\",\r\n        type: \"spring\",\r\n        damping: 10,\r\n        stiffness: 80,\r\n    },\r\n    },\r\n}\r\n\r\nconst letterVariants3 ={\r\n    before: {\r\n        opacity: 0,\r\n        scale:5\r\n        \r\n    },\r\n    after: {\r\n        opacity: 1,\r\n        scale:1,\r\n        transition: {\r\n            ease: \"easeOut\",\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst messageData = [\r\n    {\r\n        id: 1,\r\n        size: 30,\r\n        fontfamily: \"'Handlee', cursive\",\r\n        weight: \"bold\",\r\n        style: \"normal\",\r\n        color: \"#000\",\r\n        margin: \"50px\",\r\n        text: string,\r\n        variant: textVariants,\r\n        childVariant: letterVariants,\r\n    },\r\n    {\r\n        id: 2,\r\n        size: 20,\r\n        fontfamily: \"'Handlee', cursive\",\r\n        weight: \"normal\",\r\n        style: \"normal\",\r\n        color: \"#000\",\r\n        margin: \"35px\",\r\n        text: string2,\r\n        variant: textVariants2,\r\n        childVariant: letterVariants2,\r\n    },\r\n    {\r\n        id: 3,\r\n        size: 17,\r\n        fontfamily: \"'Handlee', cursive\",\r\n        weight: \"normal\",\r\n        style: \"italic\",\r\n        color: \"#000\",\r\n        margin: \"20px\",\r\n        text: string3,\r\n        variant: textVariants3,\r\n        childVariant: letterVariants3,\r\n    },\r\n];\r\n\r\nexport default messageData;\r\n","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport {motion} from 'framer-motion';\r\nimport {Frame} from 'framer';\r\nimport messageData from '../data/messageData';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        position: 'relative',\r\n        marginTop: '60px'\r\n    },\r\n    logo: {\r\n        display: 'block',\r\n        margin: 'auto',\r\n        width: 150,\r\n        height: 140\r\n    },\r\n    text: {\r\n        textAlign: 'center'\r\n    }\r\n})\r\n\r\nconst svgVariants = {\r\n    before: {},\r\n    after: {\r\n        transition: {\r\n            duration: 1,\r\n            when: \"beforeChildren\",\r\n            staggerChildren: 1}\r\n    }\r\n}\r\n\r\nconst pathVariants = {\r\n    before: {\r\n        opacity: 0,\r\n        pathLength: 0\r\n    },\r\n    after: {\r\n        opacity: 1,\r\n        pathLength: 1,\r\n        \r\n        transition: {\r\n            duration: 2,\r\n            ease: \"easeInOut\"\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst CustomFrame = (props) => (\r\n    <Frame\r\n        key={props.id}\r\n        position={\"relative\"}\r\n        center={ \"x\" }\r\n        height={ props.size }\r\n        width={ \"100%\" }\r\n        background={ \"\" }\r\n        style={{\r\n            fontFamily: props.fontfamily,\r\n            fontWeight: props.weight,\r\n            fontStyle: props.style,\r\n            letterSpacing: \"-0.0005em\",\r\n            fontSize: props.size,\r\n            color: props.color,\r\n            display: \"flex\", \r\n            justifyContent: \"center\", \r\n            marginTop: props.margin,\r\n        }}\r\n        variants={ props.variant }\r\n        initial={ \"before\" }\r\n        animate={ \"after\" }\r\n    >\r\n        {props.text.map((letter, index) => (\r\n            <Frame\r\n            key={ index }\r\n            width={ \"auto\" } \r\n            height={ props.size }\r\n            background={ \"\" }\r\n            style={{ position: \"relative\" }}\r\n            variants={ props.childVariant }\r\n            >\r\n            {letter === \" \" ? \"\\u00A0\" : letter}\r\n            </Frame>\r\n        ))}\r\n    </Frame>\r\n);\r\n\r\n\r\nconst Message = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div style={{overflow:'hidden'}} className={classes.container}>\r\n            <motion.svg viewBox=\"0 0 178 168\" className={classes.logo} {...props}\r\n                variants={svgVariants} initial=\"before\" animate=\"after\">\r\n                \r\n                <motion.path\r\n                    fill=\"none\"\r\n                    stroke=\"#39b54a\"\r\n                    d=\"M136.22 29.93s-45.82-43.16-98-5.53a58.2 58.2 0 00-13.41 13.47c-11.65 16.38-31.75 55.86 6.41 97.06 0 0 50 50 105 0 0 0 34-34.35 19-76.54\"\r\n                    strokeMiterlimit={10}\r\n                    strokeWidth={18}\r\n                    variants={pathVariants}\r\n                />\r\n                <motion.path\r\n                    fill=\"none\"\r\n                    stroke=\"#39b54a\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                    strokeWidth={20}\r\n                    d=\"M45.72 71l36 35 85-84\"\r\n                    variants={pathVariants}\r\n                />  \r\n            </motion.svg>\r\n\r\n            {messageData.map(data => (\r\n                <CustomFrame key={data.id} \r\n                    size={data.size}\r\n                    fontfamily={data.fontfamily}\r\n                    weight={data.weight}\r\n                    style={data.style}\r\n                    color={data.color}\r\n                    margin={data.margin}\r\n                    text={data.text}\r\n                    variant={data.variant}\r\n                    childVariant={data.childVariant}\r\n                    />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Message;","import React, {useState, useEffect} from 'react';\r\n\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport {Box, Button, Grid, InputAdornment, TextField, Typography} from '@material-ui/core';\r\nimport {ChatBubble, Telegram} from '@material-ui/icons';\r\nimport {AnimatePresence, motion} from 'framer-motion';\r\nimport {useInView} from 'react-intersection-observer';\r\nimport formData from '../data/formData';\r\n\r\nimport useForm from './useForm';\r\nimport validateEmail from './validateEmail';\r\nimport Message from './Message';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root:{\r\n        position: 'relative',\r\n        paddingTop: '35px',\r\n        // minHeight: '60vh'\r\n    },\r\n    title:{\r\n        textAlign: 'center',\r\n        fontSize: '2em',\r\n        paddingBottom: '1em',\r\n    },\r\n    field: {\r\n        margin: '20px 0px',\r\n        fontFamily: 'Helvetica Neue',\r\n        fontSize: '50px',\r\n        width: '20rem'\r\n    },\r\n    button: {\r\n        margin: '1.5rem 0 3rem 0',\r\n        // color: '#75A3f2',\r\n        color : '#a9c9ff',\r\n        borderColor: '#4385f5',\r\n        '&:hover':{\r\n            backgroundColor: '#4385f5',\r\n            color: 'white',\r\n            opacity: '0.9',\r\n            boxShadow: '0 0 10px #4267B2'\r\n        }\r\n    },\r\n});\r\n\r\nconst InputField = withStyles({\r\n    root: {\r\n        '& label.Mui-focused': {\r\n            color: 'blue'\r\n        },\r\n        '& label':{\r\n            color: 'black',\r\n        },\r\n        '& .MuiInputBase-root': {\r\n            fontSize: '15px'\r\n        },\r\n\r\n        '& .MuiInputBase-input::-webkit-input-placeholder':{\r\n            color: 'red',\r\n            fontStyle: 'italic',\r\n        },\r\n        '& .MuiInputBase-input::-moz-placeholder':{\r\n            color: 'red',\r\n            fontStyle: 'italic'\r\n        },\r\n        '& .MuiInputBase-input:-ms-input-placeholder':{\r\n            color: 'red',\r\n            fontStyle: 'italic'\r\n        },\r\n        \r\n    },\r\n})(TextField);\r\n\r\nconst containerVariants = {\r\n    hidden: {\r\n        opacity: 0,\r\n        transition: {\r\n            delay: 1,\r\n            staggerChildren: 0.1,\r\n        }\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        transition: {\r\n            when: \"beforeChildren\",\r\n            staggerChildren: 0.2\r\n        }\r\n    }\r\n}\r\n\r\nconst childVariants = {\r\n    hidden: {\r\n        opacity: 0,\r\n        x: '100vw',\r\n        transition: {\r\n            ease: 'easeIn'\r\n        }\r\n    },\r\n    visible: {\r\n        opacity: 1,\r\n        x: 0,\r\n        transition:{\r\n            type: 'spring',\r\n            mass: 0.45,\r\n            damping: 10,\r\n            stiffness: 80\r\n        },\r\n        \r\n    }\r\n}\r\n\r\n\r\nconst Contact = () => {\r\n\r\n    const classes = useStyles();\r\n    const [show, setShow] = useState(true);\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [variant, setVariant] = useState(\"hidden\");\r\n    const [ref, inView] = useInView({\r\n        triggerOnce: true,\r\n        threshold: 0.2\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (inView) {\r\n            setVariant(\"visible\")\r\n        }\r\n    }, [inView]);\r\n\r\n    const updateSheet = () => {\r\n        const url = 'https://script.google.com/macros/s/AKfycbyO5DB__7FssCnZI1z-kWb44Kam5KZ1sbEzRN2hc29MMWPkGrQ/exec';\r\n        const form = document.forms['contactForm'];\r\n        fetch(url, {method: 'POST', body: new FormData(form), mode:'no-cors'})\r\n            .then(response => console.log('Success!', response))\r\n            .catch(error => console.log('Error!', error.message))\r\n    }\r\n    \r\n    const {handleChange, handleSubmit, values, errors} = useForm(submit, validateEmail, updateSheet);\r\n    \r\n\r\n    function submit() {\r\n        setShow(false)\r\n        setTimeout(() => {\r\n            setShowMessage(true);\r\n        }, 1000)\r\n        \r\n    }\r\n    \r\n    return (\r\n\r\n        <Box variant='div' className={classes.root} id='contact'>\r\n            <Grid container justify='center' style={{height:615}}>\r\n\r\n                <form style={{overflow: \"hidden\"}} name=\"contactForm\" id=\"contactForm\" onSubmit={handleSubmit}>\r\n                    <Typography className={classes.title} style={{fontFamily: \"'Handlee', cursive\"}}>\r\n                        Hire or Contact Me...\r\n                    </Typography>\r\n                    <AnimatePresence exitBeforeEnter>      \r\n                        {show && <motion.div\r\n                            ref={ref}\r\n                            variants={containerVariants}\r\n                            initial='hidden'\r\n                            animate={variant}\r\n                            exit='hidden'>\r\n                    \r\n                        {formData.map(item => (\r\n                            <motion.div key={item.id} variants={childVariants}>\r\n                                <InputField className={classes.field} id={item.name} name={item.name} type=\"text\" value={values[item.name]} onChange={(event) => handleChange(event)}\r\n                                    InputProps={{\r\n                                        startAdornment: <InputAdornment position='start'>{item.icon}</InputAdornment>, \r\n                                        }}\r\n                                    fullWidth={true} \r\n                                    label={item.label} \r\n                                    margin='dense'\r\n                                    placeholder={item.text}\r\n                                    required={true}\r\n                                    variant='outlined'  \r\n                                    size='medium' \r\n                                    {...(errors[item.name] && {error:true, helperText:errors[item.name]})}\r\n                                    />\r\n                                <br />\r\n                            </motion.div>\r\n                        ))}\r\n\r\n                            <motion.div variants={childVariants}>\r\n                                <InputField multiline={true} className={classes.field} id='Message' name='formMessage' type=\"text\" value={values.formMessage} onChange={(event) => handleChange(event)}\r\n                                    InputProps={{\r\n                                        startAdornment: <InputAdornment position='start' ><ChatBubble /></InputAdornment>, \r\n                                        style: {color: 'black',\r\n                                                minHeight:'10rem'}}}\r\n                                    fullWidth={true} \r\n                                    label='Message'\r\n                                    margin='dense'\r\n                                    placeholder='Type Your Message...'\r\n                                    rowsMax='10'\r\n                                    variant='outlined'  \r\n                                    size='medium'\r\n                                />\r\n                            </motion.div>\r\n\r\n                            <motion.div variants={childVariants}>\r\n                                <Button className={classes.button} endIcon={<Telegram />} fullWidth={true} variant='outlined' type=\"submit\">\r\n                                        Send\r\n                                </Button>\r\n                            </motion.div>\r\n                        </motion.div>}\r\n\r\n                    </AnimatePresence>\r\n\r\n                    {showMessage && <Message />}\r\n                </form>\r\n            </Grid>\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\nexport default Contact"],"sourceRoot":""}